openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldDto'
  /auth/sign-up:
    post:
      operationId: AuthController_signUp
      summary: Создание пользователя
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpBodyDto'
      responses:
        '201':
          description: ''
      tags:
        - Авторизация
  /auth/sign-in:
    post:
      operationId: AuthController_signIn
      summary: Проверка логин и пароля
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInBodyDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signinResp'
      tags:
        - Авторизация
  /auth/sign-out:
    post:
      operationId: AuthController_signOut
      summary: Выход
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Авторизация
  /auth/sign-refrech:
    post:
      operationId: AuthController_refrech
      summary: Обнавление токенов
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signinResp'
      tags:
        - Авторизация
  /auth/session:
    get:
      operationId: AuthController_getSessionInfo
      summary: Вход по токену
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionInfoDto'
      tags:
        - Авторизация
  /auth/deletUser/{id}:
    delete:
      operationId: AuthController_delDeleteUser
      summary: Удаление пользователя
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signdeluser'
      tags:
        - Авторизация
  /auth/user/{id}:
    get:
      operationId: AuthController_getUserID
      summary: Поиск пользователя по Id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iduserdto'
      tags:
        - Авторизация
  /auth/register/{id}:
    post:
      operationId: AuthController_postUpdate_registr
      summary: Обновление данных пользователя по Id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInBodyDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iduserdto'
      tags:
        - Авторизация
  /roles:
    post:
      operationId: RolesController_create
      summary: Создание роли
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/СreateRoledto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createdto'
      tags:
        - Роли
  /roles/{value}:
    get:
      operationId: RolesController_getByValue
      summary: Поиск роли
      parameters:
        - name: value
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleiddto'
      tags:
        - Роли
  /roles/userrole:
    post:
      operationId: RolesController_addRole
      summary: Сменить роль
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRoleDto'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iduserdto'
      tags:
        - Роли
  /roles/user/page={page}/count={count}:
    get:
      operationId: RolesController_getUserPage
      summary: Постраничный список пользователей
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/iduserdto'
      tags:
        - Роли
info:
  title: APP list
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    HelloWorldDto:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    SignUpBodyDto:
      type: object
      properties:
        login:
          type: string
          example: test
        password:
          type: string
          example: '1234'
      required:
        - login
        - password
    SignInBodyDto:
      type: object
      properties:
        login:
          type: string
          example: test
        password:
          type: string
          example: '1234'
      required:
        - login
        - password
    signinResp:
      type: object
      properties: {}
    GetSessionInfoDto:
      type: object
      properties:
        id:
          type: number
          example: 1
        login:
          type: string
          example: test
        rolesId:
          type: number
          example: 1
        valueRole:
          type: string
          example: USER
        iat:
          type: number
        exp:
          type: number
      required:
        - id
        - login
        - rolesId
        - valueRole
        - iat
        - exp
    signdeluser:
      type: object
      properties: {}
    iduserdto:
      type: object
      properties: {}
    СreateRoledto:
      type: object
      properties:
        value:
          type: string
          example: USER
        description:
          type: string
          example: Пользователь
      required:
        - value
        - description
    createdto:
      type: object
      properties: {}
    roleiddto:
      type: object
      properties: {}
    AddRoleDto:
      type: object
      properties:
        value:
          type: string
          example: USER
        userId:
          type: number
          example: 1
      required:
        - value
        - userId
