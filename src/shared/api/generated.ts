/**
 * Generated by orval v6.28.2 üç∫
 * Do not edit manually.
 * APP list
 * OpenAPI spec version: 1.0.0
 */
import { createInstance, createInstancer } from "./api-instance";
import type { BodyType } from "./api-instance";
export interface Idusersdto {
  id: number;
  login: string;
  photos: string;
  rolesId: number;
}

export interface Userroledto {
  id: number;
  login: string;
  rolesId: number;
}

export interface AddRoleDto {
  userId: number;
  value: string;
}

export interface Roleiddto {
  [key: string]: any;
}

export interface Createdto {
  [key: string]: any;
}

export interface ReateRoledto {
  description: string;
  value: string;
}

export interface Iduserdto {
  [key: string]: any;
}

export interface Signdeluser {
  [key: string]: any;
}

export interface GetSessionInfoDto {
  exp: number;
  iat: number;
  id: number;
  login: string;
  rolesId: number;
  valueRole: string;
}

export interface SigninResp {
  [key: string]: any;
}
export interface SignupResp {
  id: number;
}

export interface SignInBodyDto {
  login: string;
  password: string;
}

export interface SignUpBodyDto {
  login: string;
  password: string;
}

export interface HelloWorldDto {
  message: string;
}

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

export const appControllerGetHello = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<HelloWorldDto>({ url: `/`, method: "GET" }, options);
};

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerSignUp = (
  signUpBodyDto: BodyType<SignUpBodyDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<SignupResp>(
    {
      url: `/auth/sign-up`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signUpBodyDto,
    },
    options,
  );
};

/**
 * @summary –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—è
 */
export const authControllerSignIn = (
  signInBodyDto: BodyType<SignInBodyDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<SigninResp>(
    {
      url: `/auth/sign-in`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signInBodyDto,
    },
    options,
  );
};

/**
 * @summary –í—ã—Ö–æ–¥
 */
export const authControllerSignOut = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    { url: `/auth/sign-out`, method: "POST" },
    options,
  );
};

/**
 * @summary –û–±–Ω–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
 */
export const authControllerRefrech = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<SigninResp>(
    { url: `/auth/sign-refrech`, method: "POST" },
    options,
  );
};

/**
 * @summary –í—Ö–æ–¥ –ø–æ —Ç–æ–∫–µ–Ω—É 
 */
export const authControllerGetSessionInfo = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<GetSessionInfoDto>(
    { url: `/auth/session`, method: "GET" },
    options,
  );
};
/**
 * @summary –í—Ö–æ–¥ –ø–æ —Ç–æ–∫–µ–Ω—É  —Å –ø–æ–≤—Ç–æ—Ä–æ–º
 */

export const authControllerGetSessionInforef = (
  options?: SecondParameter<typeof createInstancer>,
) => {
  return createInstancer<GetSessionInfoDto>(
    { url: `/auth/session`, method: "GET" },
    options,
  );
};

/**
 * @summary –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const authControllerDelDeleteUser = (
  id: number,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Signdeluser>(
    { url: `/auth/deletUser/${id}`, method: "DELETE" },
    options,
  );
};

/**
 * @summary –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Id
 */
export const authControllerGetUserID = (
  id: number,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Iduserdto>(
    { url: `/auth/user/${id}`, method: "GET" },
    options,
  );
};

/**
 * @summary –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Id
 */
export const authControllerPostUpdateRegistr = (
  id: number,
  signInBodyDto: BodyType<SignInBodyDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Iduserdto>(
    {
      url: `/auth/register/${id}`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signInBodyDto,
    },
    options,
  );
};

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏
 */
export const rolesControllerCreate = (
  reateRoledto: BodyType<ReateRoledto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Createdto>(
    {
      url: `/roles`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: reateRoledto,
    },
    options,
  );
};

/**
 * @summary –ü–æ–∏—Å–∫ —Ä–æ–ª–∏
 */
export const rolesControllerGetByValue = (
  value: string,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Roleiddto>(
    { url: `/roles/${value}`, method: "GET" },
    options,
  );
};

/**
 * @summary –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å
 */
export const rolesControllerAddRole = (
  addRoleDto: BodyType<AddRoleDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Userroledto>(
    {
      url: `/roles/userrole`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: addRoleDto,
    },
    options,
  );
};

/**
 * @summary –ü–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export const rolesControllerGetUserPage = (
  page: string,
  count: string,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Idusersdto[]>(
    { url: `/roles/user/page=${page}/count=${count}`, method: "GET" },
    options,
  );
};

export type AppControllerGetHelloResult = NonNullable<
  Awaited<ReturnType<typeof appControllerGetHello>>
>;
export type AuthControllerSignUpResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignUp>>
>;
export type AuthControllerSignInResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignIn>>
>;
export type AuthControllerSignOutResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignOut>>
>;
export type AuthControllerRefrechResult = NonNullable<
  Awaited<ReturnType<typeof authControllerRefrech>>
>;
export type AuthControllerGetSessionInfoResult = NonNullable<
  Awaited<ReturnType<typeof authControllerGetSessionInfo>>
>;
export type AuthControllerDelDeleteUserResult = NonNullable<
  Awaited<ReturnType<typeof authControllerDelDeleteUser>>
>;
export type AuthControllerGetUserIDResult = NonNullable<
  Awaited<ReturnType<typeof authControllerGetUserID>>
>;
export type AuthControllerPostUpdateRegistrResult = NonNullable<
  Awaited<ReturnType<typeof authControllerPostUpdateRegistr>>
>;
export type RolesControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerCreate>>
>;
export type RolesControllerGetByValueResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerGetByValue>>
>;
export type RolesControllerAddRoleResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerAddRole>>
>;
export type RolesControllerGetUserPageResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerGetUserPage>>
>;
